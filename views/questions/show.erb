<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Guesswhich!</title>
  <link href="https://fonts.googleapis.com/css2?family=Marcellus&family=Raleway:wght@400;700&display=swap" rel="stylesheet">
  <style>
      body {
          font-family: 'Raleway', sans-serif;
          background-image: url('https://c.wallhere.com/photos/df/65/Tibia_PC_gaming_RPG_creature_drawing_women_druids-120582.jpg!d');
          background-size: cover;
          background-repeat: no-repeat;
          background-position: center;
          background-attachment: fixed;
          color: #5a3e36;
          margin: 0;
          padding: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          height: 100vh;
      }

      .container {
          background-color: #fdf5e6;
          border-radius: 10px;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
          padding: 30px;
          text-align: center;
          width: 80%;
          max-width: 1000px;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          border: 1px solid #d4a373;
          background-image: url('https://www.transparenttextures.com/patterns/aged-paper.png');
          position: relative;
      }

      h1 {
          margin-top: 20px;
          color: #5a3e36;
          font-family: 'Marcellus', serif;
          font-size: 24px;
      }

      p {
          color: #5a3e36;
          margin-bottom: 20px;
      }

      .option {
          display: block;
          margin: 10px auto;
          padding: 12px 20px;
          font-size: 16px;
          background-color: #a25f4b;
          color: #fff;
          border: none;
          border-radius: 50px;
          cursor: pointer;
          transition: background-color 0.3s ease, transform 0.3s;
          width: 400px;
          height: 60px;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }

      option:hover {
          background-color: #d4a373;
          color: #5a3e36;
          transform: scale(1.05);
      }

      option:active {
          transform: scale(0.98);
      }

      .backbutton {
          display: block;
          width: 100px;
          margin: 10px auto;
          padding: 12px 20px;
          font-size: 18px;
          background-color: #555555;
          color: #fff;
          text-align: center;
          text-decoration: none;
          border: none;
          border-radius: 50px;
          cursor: pointer;
          transition: background-color 0.3s ease, transform 0.3s;
      }

      .backbutton:hover {
          background-color: #797673;
          color: #ece9e9;
          transform: scale(1.05);
      }

      #countdown {
          font-size: 3em;
          color: #5a3e36;
          animation: pulse 1s infinite;
      }

      @keyframes pulse {
          0% {
              transform: scale(1);
              opacity: 1;
          }
          50% {
              transform: scale(1.1);
              opacity: 0.7;
          }
          100% {
              transform: scale(1);
              opacity: 1;
          }
      }

      #points-container {
          border: 2px solid #d4a373;
          padding: 10px;
          background-color: rgba(255, 255, 255, 0.8);
          display: flex;
          justify-content: center;
          align-items: center;
          width: 120px;
          position: absolute;
          top: 20px;
          right: 20px;
          border-radius: 10px;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
          font-size: 1.2em;
          font-weight: bold;
      }

      .point-item {
          animation: fadeIn 1s ease-out forwards;
      }

      #streak-container{
        border: 2px solid #d4a373;
        padding: 10px;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        flex-direction: column;
        gap: 10px;
        justify-content: center;
        align-items: center;
        width: 120px;
        position: absolute;
        top: 150px;
        right: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        font-size: 1.2em;
        font-weight: bold;
        animation: fadeIn 1s ease-in-out;
      }

    #streak-item1 {
        top: 150px;
        right: 20px;
        background-color: #a25f4b;
        color: #fff;
    }
    
    #streak-item2 {
        top: 200px;
        right: 20px;
    }
    
    #streak-item3 {
        top: 250px;
        right: 20px;
    }

      @keyframes fadeIn {
          from {
              opacity: 0;
          }
          to {
              opacity: 1;
          }
      }

      button.correct {
          background-color: #4CAF50;
          color: white;
          transform: none;
      }

      button.incorrect {
          background-color: #f44336;
          color: white;
          transform: none;
      }



  </style>
</head>
<body>
<div class="container">
  <div id="countdown">15</div>
  <div id="points-container">
    <div class="point-item">Points: <%= @streak1 %></div>
  </div>

  <% if @streak1 || @streak2 || @streak3 %>
   <div id="streak-container">
        <% if @streak1 %>
           <button id="streak-item1" onclick="handleClick('streak1')">streak1</button>
       <% end %>
        <% if @streak2 %>
             <button id="streak-item2" onclick="handleClick('streak2')">streak2</button>
        <% end %>
        <% if @streak3 %>
            <button id="streak-item3" onclick="handleClick('streak3')">streak3</button>
        <% end %>
    </div>
<% end %>

  <h1><%= @questions.description %></h1>
  <p>Choose an answer:</p>

  <% @answers.shuffle.each do |answer| %>
    <form action="/questions" method="post">
      <input type="hidden" name="answer" id="<%= answer.id %>" value="<%= answer.id %>" />
      <button type="submit" class="option" data-answer-id="<%= answer.id %>"><%= answer.description %></button>
    </form>
  <% end %>

  <a href="/menu" class="backbutton">Back</a>
</div>

<script>
    let timeLeft = 15;
    function handleClick(streak) {
        if (streak === 'streak1') {
            timeLeft = 25;
            document.getElementById("streak-item1").style.visibility = "hidden"; 
            updateVisibility(streak);
        } else if (streak === 'streak2') {
            document.getElementById("streak-item2").style.visibility = "hidden"; 
            window.location.href = '/streak2';
        } else if (streak === 'streak3') {
            updateVisibility(streak);
            document.getElementById("streak-item3").style.visibility = "hidden"; 
        }
    }

    function updateVisibility(streak) {
    fetch(`/${streak}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json'
        }
    }).then(response => {
        if (response.ok) {
            console.log('Visibility updated successfully');
        }
    }).catch(error => {
        console.error('Error:', error);
    });
}

    const countdownElement = document.getElementById('countdown');

    const countdownTimer = setInterval(() => {
        if (timeLeft < 0) {
            clearInterval(countdownTimer);
            window.location.href = 'http://127.0.0.1:4567/finish';
        } else {
            countdownElement.textContent = timeLeft;
            timeLeft--;
        }
    }, 1000);

    const correctAnswerId = '<%= @correct_answer_id %>'; // Este valor debe ser pasado desde el servidor con la ID correcta

    document.querySelectorAll('.option').forEach(button => {
        button.addEventListener('click', function() {
            const selectedAnswerId = this.getAttribute('data-answer-id');

            // Deshabilitar todos los botones y aplicar la clase 'no-hover'
            document.querySelectorAll('.option').forEach(btn => {
                btn.disabled = true;
                btn.classList.add('no-hover'); // Agregar clase para deshabilitar hover
            });

            // Comprobar si la respuesta seleccionada es la correcta
            if (selectedAnswerId === correctAnswerId) {
                this.classList.add('correct');
            } else {
                this.classList.add('incorrect');
            }

            setTimeout(() => {
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '/questions';

                const hiddenField = document.createElement('input');
                hiddenField.type = 'hidden';
                hiddenField.name = 'answer';
                hiddenField.value = selectedAnswerId;
                form.appendChild(hiddenField);

                document.body.appendChild(form);
                form.submit();
            }, 1500);
        });
            

    });
</script>
</body>
</html>